import 'package:flutter/material.dart';

class CourseDetailPage extends StatefulWidget {
  final Map<String, dynamic> course;

  const CourseDetailPage({Key? key, required this.course}) : super(key: key);

  @override
  State<CourseDetailPage> createState() => _CourseDetailPageState();
}

class _CourseDetailPageState extends State<CourseDetailPage>
    with SingleTickerProviderStateMixin {
  late TabController _tabController;
  bool _isEnrolled = false;
  bool _isFavorite = false;

  @override
  void initState() {
    super.initState();
    _tabController = TabController(length: 4, vsync: this);
  }

  @override
  void dispose() {
    _tabController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: CustomScrollView(
        slivers: [
          _buildAppBar(),
          SliverToBoxAdapter(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                _buildCourseHeader(),
                _buildPriceAndActions(),
                _buildTabBar(),
                _buildTabContent(),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildAppBar() {
    return SliverAppBar(
      expandedHeight: 250,
      pinned: true,
      backgroundColor: Colors.black,
      flexibleSpace: FlexibleSpaceBar(
        background: Stack(
          fit: StackFit.expand,
          children: [
            // Course thumbnail
            widget.course['thumbnail_url'] != null
                ? Image.network(
                  widget.course['thumbnail_url'],
                  fit: BoxFit.cover,
                  errorBuilder:
                      (context, error, stackTrace) =>
                          Container(color: Colors.grey[300]),
                )
                : Container(color: Colors.grey[300]),
            // Gradient overlay
            Container(
              decoration: BoxDecoration(
                gradient: LinearGradient(
                  begin: Alignment.topCenter,
                  end: Alignment.bottomCenter,
                  colors: [Colors.transparent, Colors.black.withOpacity(0.7)],
                ),
              ),
            ),
            // Play button
            Center(
              child: Container(
                padding: const EdgeInsets.all(20),
                decoration: BoxDecoration(
                  color: Colors.white.withOpacity(0.9),
                  shape: BoxShape.circle,
                ),
                child: Icon(Icons.play_arrow, size: 40, color: Colors.black),
              ),
            ),
          ],
        ),
      ),
      actions: [
        IconButton(
          icon: Icon(
            _isFavorite ? Icons.favorite : Icons.favorite_border,
            color: _isFavorite ? Colors.red : Colors.white,
          ),
          onPressed: () {
            setState(() {
              _isFavorite = !_isFavorite;
            });
          },
        ),
        IconButton(
          icon: Icon(Icons.share, color: Colors.white),
          onPressed: () {},
        ),
      ],
    );
  }

  Widget _buildCourseHeader() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            widget.course['title'] ?? 'T√™n kh√≥a h·ªçc',
            style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
          ),
          const SizedBox(height: 8),
          Text(
            'Kh√≥a h·ªçc l·∫≠p tr√¨nh t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao d√†nh cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu',
            style: TextStyle(fontSize: 16, color: Colors.grey[600]),
          ),
          const SizedBox(height: 12),
          Row(
            children: [
              Icon(Icons.star, color: Colors.amber, size: 20),
              const SizedBox(width: 4),
              Text('4.8', style: TextStyle(fontWeight: FontWeight.bold)),
              const SizedBox(width: 8),
              Text(
                '(2,847 ƒë√°nh gi√°)',
                style: TextStyle(color: Colors.grey[600]),
              ),
              const SizedBox(width: 16),
              Icon(Icons.people, color: Colors.grey[600], size: 20),
              const SizedBox(width: 4),
              Text(
                '15,234 h·ªçc vi√™n',
                style: TextStyle(color: Colors.grey[600]),
              ),
            ],
          ),
          const SizedBox(height: 12),
          Row(
            children: [
              CircleAvatar(
                radius: 16,
                backgroundColor: Colors.grey[300],
                child: Icon(Icons.person, size: 20),
              ),
              const SizedBox(width: 8),
              Text(
                'T·∫°o b·ªüi ${widget.course['user_name'] ?? 'Gi·∫£ng vi√™n'}',
                style: TextStyle(
                  color: Colors.blue[600],
                  fontWeight: FontWeight.w500,
                ),
              ),
            ],
          ),
          const SizedBox(height: 8),
          Row(
            children: [
              Icon(Icons.update, size: 16, color: Colors.grey[600]),
              const SizedBox(width: 4),
              Text(
                'C·∫≠p nh·∫≠t l·∫ßn cu·ªëi 3/2024',
                style: TextStyle(color: Colors.grey[600]),
              ),
              const SizedBox(width: 16),
              Icon(Icons.language, size: 16, color: Colors.grey[600]),
              const SizedBox(width: 4),
              Text('Ti·∫øng Vi·ªát', style: TextStyle(color: Colors.grey[600])),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildPriceAndActions() {
    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.grey[50],
        border: Border(
          top: BorderSide(color: Colors.grey[300]!),
          bottom: BorderSide(color: Colors.grey[300]!),
        ),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              Text(
                _formatCurrency(widget.course['discount_price']),
                style: TextStyle(
                  fontSize: 28,
                  fontWeight: FontWeight.bold,
                  color: Colors.red[600],
                ),
              ),
              const SizedBox(width: 12),
              if (widget.course['price'] != null)
                Text(
                  _formatCurrency(widget.course['price']),
                  style: TextStyle(
                    fontSize: 18,
                    decoration: TextDecoration.lineThrough,
                    color: Colors.grey[600],
                  ),
                ),
            ],
          ),
          const SizedBox(height: 4),
          Text(
            'üî• Gi·∫£m gi√° 85%',
            style: TextStyle(
              color: Colors.red[600],
              fontWeight: FontWeight.w500,
            ),
          ),
          const SizedBox(height: 16),
          Row(
            children: [
              Expanded(
                child: ElevatedButton(
                  onPressed: () {
                    setState(() {
                      _isEnrolled = !_isEnrolled;
                    });
                  },
                  style: ElevatedButton.styleFrom(
                    backgroundColor:
                        _isEnrolled ? Colors.green : Colors.purple[700],
                    padding: const EdgeInsets.symmetric(vertical: 16),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(8),
                    ),
                  ),
                  child: Text(
                    _isEnrolled ? 'ƒê√£ ƒëƒÉng k√Ω' : 'ƒêƒÉng k√Ω ngay',
                    style: TextStyle(
                      fontSize: 16,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ),
              const SizedBox(width: 12),
              OutlinedButton(
                onPressed: () {},
                style: OutlinedButton.styleFrom(
                  padding: const EdgeInsets.symmetric(
                    vertical: 16,
                    horizontal: 24,
                  ),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(8),
                  ),
                ),
                child: Text('Th√™m v√†o gi·ªè h√†ng'),
              ),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildTabBar() {
    return Container(
      color: Colors.white,
      child: TabBar(
        controller: _tabController,
        labelColor: Colors.black,
        unselectedLabelColor: Colors.grey[600],
        indicatorColor: Colors.purple[700],
        tabs: [
          Tab(text: 'T·ªïng quan'),
          Tab(text: 'N·ªôi dung'),
          Tab(text: 'ƒê√°nh gi√°'),
          Tab(text: 'Gi·∫£ng vi√™n'),
        ],
      ),
    );
  }

  Widget _buildTabContent() {
    return Container(
      height: 600,
      child: TabBarView(
        controller: _tabController,
        children: [
          _buildOverviewTab(),
          _buildContentTab(),
          _buildReviewsTab(),
          _buildInstructorTab(),
        ],
      ),
    );
  }

  Widget _buildOverviewTab() {
    return SingleChildScrollView(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          _buildSectionTitle('B·∫°n s·∫Ω h·ªçc ƒë∆∞·ª£c g√¨'),
          _buildLearningOutcomes(),
          const SizedBox(height: 24),
          _buildSectionTitle('M√¥ t·∫£ kh√≥a h·ªçc'),
          _buildCourseDescription(),
          const SizedBox(height: 24),
          _buildSectionTitle('Y√™u c·∫ßu'),
          _buildRequirements(),
        ],
      ),
    );
  }

  Widget _buildContentTab() {
    return SingleChildScrollView(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Container(
            padding: const EdgeInsets.all(16),
            decoration: BoxDecoration(
              color: Colors.blue[50],
              borderRadius: BorderRadius.circular(8),
            ),
            child: Row(
              children: [
                Icon(Icons.info_outline, color: Colors.blue[700]),
                const SizedBox(width: 8),
                Expanded(
                  child: Text(
                    '12 ch∆∞∆°ng ‚Ä¢ 120 b√†i h·ªçc ‚Ä¢ 40 gi·ªù t·ªïng th·ªùi l∆∞·ª£ng',
                    style: TextStyle(color: Colors.blue[700]),
                  ),
                ),
              ],
            ),
          ),
          const SizedBox(height: 16),
          ...List.generate(5, (index) => _buildChapterItem(index + 1)),
        ],
      ),
    );
  }

  Widget _buildReviewsTab() {
    return SingleChildScrollView(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          _buildRatingOverview(),
          const SizedBox(height: 24),
          _buildSectionTitle('ƒê√°nh gi√° t·ª´ h·ªçc vi√™n'),
          ...List.generate(5, (index) => _buildReviewItem()),
        ],
      ),
    );
  }

  Widget _buildInstructorTab() {
    return SingleChildScrollView(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          _buildInstructorInfo(),
          const SizedBox(height: 24),
          _buildSectionTitle('Kh√≥a h·ªçc kh√°c c·ªßa gi·∫£ng vi√™n'),
          ...List.generate(3, (index) => _buildInstructorCourse(index)),
        ],
      ),
    );
  }

  Widget _buildSectionTitle(String title) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 12),
      child: Text(
        title,
        style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
      ),
    );
  }

  Widget _buildLearningOutcomes() {
    final outcomes = [
      'N·∫Øm v·ªØng c√°c kh√°i ni·ªám c∆° b·∫£n v·ªÅ l·∫≠p tr√¨nh',
      'X√¢y d·ª±ng ·ª©ng d·ª•ng ho√†n ch·ªânh t·ª´ ƒë·∫ßu',
      'Hi·ªÉu v√† √°p d·ª•ng c√°c design pattern',
      'T·ªëi ∆∞u h√≥a hi·ªáu su·∫•t ·ª©ng d·ª•ng',
      'Deploy ·ª©ng d·ª•ng l√™n production',
    ];

    return Column(
      children:
          outcomes
              .map(
                (outcome) => Padding(
                  padding: const EdgeInsets.only(bottom: 8),
                  child: Row(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Icon(Icons.check, color: Colors.green, size: 20),
                      const SizedBox(width: 8),
                      Expanded(child: Text(outcome)),
                    ],
                  ),
                ),
              )
              .toList(),
    );
  }

  Widget _buildCourseDescription() {
    return Text(
      'Kh√≥a h·ªçc n√†y ƒë∆∞·ª£c thi·∫øt k·∫ø d√†nh cho nh·ªØng ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu v·ªõi l·∫≠p tr√¨nh. B·∫°n s·∫Ω h·ªçc t·ª´ nh·ªØng kh√°i ni·ªám c∆° b·∫£n nh·∫•t cho ƒë·∫øn c√°c k·ªπ thu·∫≠t n√¢ng cao. V·ªõi h∆°n 40 gi·ªù video v√† 50+ b√†i t·∫≠p th·ª±c h√†nh, b·∫°n s·∫Ω c√≥ n·ªÅn t·∫£ng v·ªØng ch·∫Øc ƒë·ªÉ ph√°t tri·ªÉn s·ª± nghi·ªáp l·∫≠p tr√¨nh.',
      style: TextStyle(fontSize: 16, height: 1.5, color: Colors.grey[700]),
    );
  }

  Widget _buildRequirements() {
    final requirements = [
      'Kh√¥ng c·∫ßn kinh nghi·ªám l·∫≠p tr√¨nh tr∆∞·ªõc ƒë√≥',
      'M√°y t√≠nh c√≥ th·ªÉ c√†i ƒë·∫∑t ph·∫ßn m·ªÅm',
      'Th√°i ƒë·ªô h·ªçc h·ªèi t√≠ch c·ª±c',
    ];

    return Column(
      children:
          requirements
              .map(
                (req) => Padding(
                  padding: const EdgeInsets.only(bottom: 8),
                  child: Row(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Icon(Icons.circle, size: 6, color: Colors.grey[600]),
                      const SizedBox(width: 8),
                      Expanded(child: Text(req)),
                    ],
                  ),
                ),
              )
              .toList(),
    );
  }

  Widget _buildChapterItem(int chapterNumber) {
    return Container(
      margin: const EdgeInsets.only(bottom: 12),
      decoration: BoxDecoration(
        border: Border.all(color: Colors.grey[300]!),
        borderRadius: BorderRadius.circular(8),
      ),
      child: ExpansionTile(
        title: Text('Ch∆∞∆°ng $chapterNumber: Ki·∫øn th·ª©c c∆° b·∫£n'),
        subtitle: Text('8 b√†i h·ªçc ‚Ä¢ 3 gi·ªù 20 ph√∫t'),
        children: List.generate(
          8,
          (index) => ListTile(
            leading: Icon(Icons.play_circle_outline),
            title: Text('B√†i ${index + 1}: Gi·ªõi thi·ªáu v·ªÅ l·∫≠p tr√¨nh'),
            subtitle: Text('15 ph√∫t'),
            trailing: Icon(Icons.lock_outline, color: Colors.grey),
          ),
        ),
      ),
    );
  }

  Widget _buildRatingOverview() {
    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.grey[50],
        borderRadius: BorderRadius.circular(8),
      ),
      child: Row(
        children: [
          Column(
            children: [
              Text(
                '4.8',
                style: TextStyle(
                  fontSize: 48,
                  fontWeight: FontWeight.bold,
                  color: Colors.amber[700],
                ),
              ),
              Row(
                children: List.generate(
                  5,
                  (index) => Icon(Icons.star, color: Colors.amber, size: 20),
                ),
              ),
              Text('2,847 ƒë√°nh gi√°'),
            ],
          ),
          const SizedBox(width: 32),
          Expanded(
            child: Column(
              children: List.generate(
                5,
                (index) => Padding(
                  padding: const EdgeInsets.only(bottom: 4),
                  child: Row(
                    children: [
                      Text('${5 - index}'),
                      const SizedBox(width: 8),
                      Expanded(
                        child: LinearProgressIndicator(
                          value: (5 - index) * 0.2,
                          backgroundColor: Colors.grey[300],
                          valueColor: AlwaysStoppedAnimation(Colors.amber),
                        ),
                      ),
                      const SizedBox(width: 8),
                      Text('${(5 - index) * 20}%'),
                    ],
                  ),
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildReviewItem() {
    return Container(
      padding: const EdgeInsets.all(16),
      margin: const EdgeInsets.only(bottom: 16),
      decoration: BoxDecoration(
        border: Border.all(color: Colors.grey[300]!),
        borderRadius: BorderRadius.circular(8),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              CircleAvatar(
                radius: 20,
                backgroundColor: Colors.grey[300],
                child: Icon(Icons.person),
              ),
              const SizedBox(width: 12),
              Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      'Nguy·ªÖn VƒÉn A',
                      style: TextStyle(fontWeight: FontWeight.bold),
                    ),
                    Row(
                      children: [
                        ...List.generate(
                          5,
                          (index) =>
                              Icon(Icons.star, color: Colors.amber, size: 16),
                        ),
                        const SizedBox(width: 8),
                        Text(
                          '2 tu·∫ßn tr∆∞·ªõc',
                          style: TextStyle(color: Colors.grey[600]),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ],
          ),
          const SizedBox(height: 12),
          Text(
            'Kh√≥a h·ªçc r·∫•t hay v√† chi ti·∫øt. Gi·∫£ng vi√™n gi·∫£i th√≠ch r√µ r√†ng, d·ªÖ hi·ªÉu. T√¥i ƒë√£ h·ªçc ƒë∆∞·ª£c r·∫•t nhi·ªÅu ki·∫øn th·ª©c h·ªØu √≠ch t·ª´ kh√≥a h·ªçc n√†y.',
          ),
        ],
      ),
    );
  }

  Widget _buildInstructorInfo() {
    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.grey[50],
        borderRadius: BorderRadius.circular(8),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              CircleAvatar(
                radius: 40,
                backgroundColor: Colors.grey[300],
                child: Icon(Icons.person, size: 40),
              ),
              const SizedBox(width: 16),
              Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      widget.course['user_name'] ?? 'Gi·∫£ng vi√™n',
                      style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    Text('Senior Developer & Instructor'),
                    const SizedBox(height: 8),
                    Row(
                      children: [
                        Icon(Icons.star, color: Colors.amber, size: 16),
                        Text(' 4.9 ‚Ä¢ '),
                        Text('50,000+ h·ªçc vi√™n ‚Ä¢ '),
                        Text('25 kh√≥a h·ªçc'),
                      ],
                    ),
                  ],
                ),
              ),
            ],
          ),
          const SizedBox(height: 16),
          Text(
            'T√¥i l√† m·ªôt l·∫≠p tr√¨nh vi√™n v·ªõi h∆°n 10 nƒÉm kinh nghi·ªám trong ng√†nh. ƒê√£ t·ª´ng l√†m vi·ªác t·∫°i c√°c c√¥ng ty l·ªõn v√† hi·ªán ƒëang gi·∫£ng d·∫°y l·∫≠p tr√¨nh cho h∆°n 50,000 h·ªçc vi√™n tr√™n to√†n th·∫ø gi·ªõi.',
            style: TextStyle(height: 1.5),
          ),
        ],
      ),
    );
  }

  Widget _buildInstructorCourse(int index) {
    return Container(
      margin: const EdgeInsets.only(bottom: 12),
      padding: const EdgeInsets.all(12),
      decoration: BoxDecoration(
        border: Border.all(color: Colors.grey[300]!),
        borderRadius: BorderRadius.circular(8),
      ),
      child: Row(
        children: [
          Container(
            width: 60,
            height: 40,
            decoration: BoxDecoration(
              color: Colors.grey[300],
              borderRadius: BorderRadius.circular(4),
            ),
          ),
          const SizedBox(width: 12),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  'Kh√≥a h·ªçc l·∫≠p tr√¨nh ${index + 1}',
                  style: TextStyle(fontWeight: FontWeight.bold),
                ),
                Row(
                  children: [
                    Icon(Icons.star, color: Colors.amber, size: 14),
                    Text(' 4.7 ‚Ä¢ '),
                    Text('‚Ç´299,000'),
                  ],
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  String _formatCurrency(dynamic price) {
    if (price == null) return '';
    return '‚Ç´${price.toString().replaceAllMapped(RegExp(r'(\d)(?=(\d{3})+(?!\d))'), (Match m) => '${m[1]},')}';
  }
}
